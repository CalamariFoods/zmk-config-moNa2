#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

// OS設定を日本語キーボードのまま使用するための変換定義
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        td_0: td_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_0";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1>, <&kp LANGUAGE_2>, <&to 7>;
        };

        td_1: td_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_1";
            #binding-cells = <0>;
            bindings = <&mkp MB4>, <&mkp MB5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R           &kp T                                    &kp Y            &kp U  &kp I      &kp O      &kp P
&kp A      &kp S         &kp D         &kp F           &kp G        &trans       &kp MINUS      &kp H            &kp J  &kp K      &lt 5 L    &mt LEFT_CONTROL ENTER
&kp Z      &kp X         &kp C         &kp V           &kp B        &mo 4        &kp SEMICOLON  &kp N            &kp M  &mkp LCLK  &mkp RCLK  &mt LEFT_SHIFT MINUS
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &kp LEFT_SHIFT  &lt 1 SPACE  &lt 2 TAB    &td_0          &lt 3 BACKSPACE                               &mt LEFT_WIN ESC
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_1 {
            bindings = <
&kp NUMBER_1          &kp NUMBER_2   &kp NUMBER_3  &kp NUMBER_4          &kp N5                                                        &kp NUMBER_6   &kp N7            &kp N8            &kp N9             &kp N0
&kp EXCLAMATION       &kp AT         &kp HASH      &kp DOLLAR            &kp PERCENT            &trans        &kp LS(BACKSLASH)        &kp SEMI       &kp SINGLE_QUOTE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&mt LEFT_SHIFT CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp C_MUTE    &kp LS(INTERNATIONAL_1)  &kp GRAVE      &kp EQUAL         &kp COMMA         &kp PERIOD         &mt LEFT_SHIFT SLASH
&trans                &trans         &trans        &kp LEFT_WIN          &trans                 &trans        &kp DELETE               &kp BACKSPACE                                                         &kp INTERNATIONAL_1
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5                                      &kp COMMA        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp SLASH
&kp F6  &kp F7  &kp F8  &kp F9   &kp F10  &trans    &kp UNDERSCORE           &kp DOT          &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK
&trans  &trans  &trans  &kp F11  &kp F12  &trans    &kp LS(INTERNATIONAL_1)  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp MINUS
&trans  &trans  &trans  &trans   &trans   &trans    &kp KP_ENTER             &trans                                                              &kp PLUS
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans                   &kp PAGE_UP     &kp UP_ARROW    &kp PAGE_DOWN    &td_1
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LG(LS(LEFT_ARROW))   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LG(LS(RIGHT_ARROW))  &kp HOME        &trans          &kp END          &kp LEFT_SHIFT
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                                                    &kp PRINTSCREEN
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&bt BT_DISC 4  &bt BT_DISC 3  &bt BT_DISC 2  &bt BT_DISC 1  &bt BT_DISC 0                          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans         &trans         &trans         &trans         &trans         &trans    &out OUT_TOG  &trans        &trans        &trans        &trans        &trans
&trans         &trans         &trans         &trans         &bootloader    &trans    &bootloader   &trans        &trans        &trans        &trans        &bt BT_CLR
&trans         &trans         &trans         &trans         &trans         &trans    &trans        &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_7 {
            bindings = <
&kp ESCAPE        &kp Q   &kp W   &kp E   &kp R                              &trans  &trans  &trans  &trans  &trans
&kp TAB           &kp A   &kp S   &kp D   &kp F      &trans          &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT    &kp Z   &kp X   &kp C   &kp V      &trans          &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &trans  &trans  &kp F3  &kp SPACE  &kp NUMBER_4    &to 0   &trans                          &trans
            >;
        };
    };
};
